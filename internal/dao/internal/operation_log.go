// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OperationLogDao is the data access object for table operation_log.
type OperationLogDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns OperationLogColumns // columns contains all the column names of Table for convenient usage.
}

// OperationLogColumns defines and stores column names for table operation_log.
type OperationLogColumns struct {
	Id          string //
	Username    string // 操作者用户名
	Uri         string // 请求接口
	Method      string // 请求方式
	Param       string // 请求参数
	Description string // 操作描述
	Ip          string // ip
	IpSource    string // ip来源
	Os          string // 操作系统
	Browser     string // 浏览器
	Times       string // 请求耗时（毫秒）
	CreateTime  string // 操作时间
	UserAgent   string // user-agent用户代理
}

//  operationLogColumns holds the columns for table operation_log.
var operationLogColumns = OperationLogColumns{
	Id:          "id",
	Username:    "username",
	Uri:         "uri",
	Method:      "method",
	Param:       "param",
	Description: "description",
	Ip:          "ip",
	IpSource:    "ip_source",
	Os:          "os",
	Browser:     "browser",
	Times:       "times",
	CreateTime:  "create_time",
	UserAgent:   "user_agent",
}

// NewOperationLogDao creates and returns a new DAO object for table data access.
func NewOperationLogDao() *OperationLogDao {
	return &OperationLogDao{
		group:   "default",
		table:   "operation_log",
		columns: operationLogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OperationLogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OperationLogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OperationLogDao) Columns() OperationLogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OperationLogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OperationLogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OperationLogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
